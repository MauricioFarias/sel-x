/**
 * The first line in the build configuration applies the Android plugin for
 * Gradle to this build and makes the android block available to specify
 * Android-specific build options.
 */
apply plugin: 'com.android.application'
/*
buildscript {
    repositories {
        jcenter ()
    }
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
    }
}
*/

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */

android {
    /**
     * compileSdkVersion specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     *
     * buildToolsVersion specifies the version of the SDK build tools, command-line
     * utilities, and compiler that Gradle should use to build your app. You need to
     * download the build tools using the SDK Manager.
     */

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    /**
     * The defaultConfig block encapsulates default settings and entries for all
     * build variants, and can override some attributes in main/AndroidManifest.xml
     * dynamically from the build system. You can configure product flavors to override
     * these values for different versions of your app.
     */

    defaultConfig {
        /**
         * applicationId uniquely identifies the package for publishing.
         * However, your source code should still reference the package name
         * defined by the package attribute in the main/AndroidManifest.xml file.
         */

        applicationId "com.datax.sel_x_ui"

        // Defines the minimum API level required to run the app.
        minSdkVersion 15

        // Specifies the API level used to test the app.
        targetSdkVersion 25

        // Defines the version number of your app.
        versionCode 1

        // Defines a user-friendly version name for your app.
        versionName "1.0"

        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies Proguard settings and is not signed by default.
     */

    buildTypes {
        /**
         * By default, Android Studio configures the release build type to enable code
         * shrinking, using minifyEnabled, and specifies the Proguard settings file.
         */

        release {
            minifyEnabled true // Enables code shrinking for the release build type.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 * The productFlavors block is where you can configure multiple product
 * flavors. This allows you to create different versions of your app that can
 * override the defaultConfig block with their own settings. Product flavors are
 * optional, and the build system does not create them by default. This example
 * creates a free and paid product flavor. Each product flavor then specifies
 * its own application ID, so that they can exist on the Google Play Store, or
 * an Android device, simultaneously.
 */
/*
productFlavors {
    free {
        applicationId 'com.example.myapp.free'
    }

    paid {
        applicationId 'com.example.myapp.paid'
    }
}
*/

/**
 * The splits block is where you can configure different APK builds that
 * each contain only code and resources for a supported screen density or
 * ABI. You'll also need to configure your build so that each APK has a
 * different versionCode.
 */

/*splits {
    // Settings to build multiple APKs based on screen density.
    density {

        // Enable or disable building multiple APKs.
        enable false

        // Exclude these densities when building multiple APKs.
        exclude "ldpi", "tvdpi", "xxxhdpi", "400dpi", "560dpi"
    }
}
}
*/

/**
 * The dependencies block in the module-level build configuration file
 * only specifies dependencies required to build the module itself.
 */

dependencies {
//    compile project(":lib")
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    /*androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    */
    //androidTestCompile 'junit:junit:4.12'
    //testCompile 'junit:junit:4.12'
}
